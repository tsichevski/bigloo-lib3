; -*-Scheme-*-

;************************************************************************/
;*                                                                      */
;* Copyright (c) 2003-2009 Vladimir Tsichevski <tsichevski@gmail.com>   */
;*                                                                      */
;* This file is part of bigloo-lib (http://bigloo-lib.sourceforge.net)  */
;*                                                                      */
;* This library is free software; you can redistribute it and/or        */
;* modify it under the terms of the GNU Lesser General Public           */
;* License as published by the Free Software Foundation; either         */
;* version 2 of the License, or (at your option) any later version.     */
;*                                                                      */
;* This library is distributed in the hope that it will be useful,      */
;* but WITHOUT ANY WARRANTY; without even the implied warranty of       */
;* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU    */
;* Lesser General Public License for more details.                      */
;*                                                                      */
;* You should have received a copy of the GNU Lesser General Public     */
;* License along with this library; if not, write to the Free Software  */
;* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 */
;* USA                                                                  */
;*                                                                      */
;************************************************************************/

(module
 xmlmemory
 (extern
  (include "libxml/xmlmemory.h")
  (export dummy-gc-free "bigloo_xml_gc_free")
  (export gc-strdup "bigloo_xml_gc_strdup")
  )
 )

(define-export (dummy-gc-free o)
  #unspecified
  )

(define-export (gc-strdup::string s::string)
  (let((result::string (pragma::string "(char*)GC_malloc_atomic(strlen($1) + 1)" s)))
    (pragma "strcpy($1, $2)"result s)
    result))

(define-export (xml-gc-mem-setup)
  ;;(pragma "extern void* GC_realloc(void* old_object, size_t new_size_in_bytes)")

  (pragma::bool "xmlGcMemSetup((xmlFreeFunc) bigloo_xml_gc_free,
                               (xmlMallocFunc)GC_malloc,
                               (xmlMallocFunc)GC_malloc_atomic,
                               (xmlReallocFunc) GC_realloc,
                               (xmlStrdupFunc) bigloo_xml_gc_strdup)"))

