; -*-Scheme-*-

;************************************************************************/
;*                                                                      */
;* Copyright (c) 2003-2009 Vladimir Tsichevski <tsichevski@gmail.com>   */
;*                                                                      */
;* This file is part of bigloo-lib (http://bigloo-lib.sourceforge.net)  */
;*                                                                      */
;* This library is free software; you can redistribute it and/or        */
;* modify it under the terms of the GNU Lesser General Public           */
;* License as published by the Free Software Foundation; either         */
;* version 2 of the License, or (at your option) any later version.     */
;*                                                                      */
;* This library is distributed in the hope that it will be useful,      */
;* but WITHOUT ANY WARRANTY; without even the implied warranty of       */
;* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU    */
;* Lesser General Public License for more details.                      */
;*                                                                      */
;* You should have received a copy of the GNU Lesser General Public     */
;* License along with this library; if not, write to the Free Software  */
;* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 */
;* USA                                                                  */
;*                                                                      */
;************************************************************************/

(module
 dl
 (use srfi-1)
 (extern
  (include "dlfcn.h")
  )
 
 (export
  (dlopen::dl #!optional (path "") #!rest mode)
  )
 )

(register-eval-srfi! 'dl)

(define-object (dl void*) ())
(define-object (dlsym void*) ())

(define-flags (dlopen-flags int)
  (lazy RTLD_LAZY)
  (now RTLD_NOW)
  (global RTLD_GLOBAL)

;; FIXME: the existence of RTLD_NOLOAD and RTLD_NODELETE has to be
;; detected by configure

;;  (noload RTLD_NOLOAD)
;;  (nodelete RTLD_NODELETE)
  )

(define (dlopen::dl #!optional (path "") #!rest mode)
  (let*((path::string path)
	(md::dlopen-flags
	 (if(pair? mode)
	    mode
	    (pragma::dlopen-flags
	     "RTLD_LAZY|RTLD_GLOBAL")))
	(result::dl
	 (pragma::dl "dlopen($1,$2)"path md)))
    (or result
	(error "dlopen" (dlerror) path))))

(define-func dlsym dlsym ((dl handle)(string name))(false))
(define-func dlerror string ())
